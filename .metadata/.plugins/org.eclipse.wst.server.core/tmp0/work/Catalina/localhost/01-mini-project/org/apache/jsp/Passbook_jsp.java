/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2024-08-16 21:56:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.aurionpro.entity.Transactions;
import java.util.List;

public final class Passbook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2_1.jar", Long.valueOf(1723607492343L));
    _jspx_dependants.put("/CustomerNavbar.jsp", Long.valueOf(1723798711567L));
    _jspx_dependants.put("jar:file:/D:/miniproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/01-mini-project/WEB-INF/lib/jstl-1.2_1.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.aurionpro.entity.Transactions");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

	response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
	response.setHeader("Pragma", "no-cache");
	response.setDateHeader("Expires", 0);
	HttpSession sessions = request.getSession(false);
	if (session == null || !"customer".equals(session.getAttribute("customer"))) {

		response.sendRedirect("Index.jsp");
		return;
	}

      out.write("\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"Customer.jsp\" style=\"color: white;\">Customer Dashboard</a>\r\n");
      out.write("        <div class=\"collapse navbar-collapse justify-content-end\">\r\n");
      out.write("            <ul class=\"navbar-nav\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <form action=\"CustomerController\" method=\"get\" class=\"nav-item\">\r\n");
      out.write("                        <button type=\"submit\" name=\"action\" value=\"Passbook\" class=\"btn btn-link\">Passbook</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <form action=\"CustomerController\" method=\"get\" class=\"nav-item\">\r\n");
      out.write("                        <button type=\"submit\" name=\"action\" value=\"NewTransaction\" class=\"btn btn-link\">New Transaction</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <form action=\"CustomerController\" method=\"get\" class=\"nav-item\">\r\n");
      out.write("                        <button type=\"submit\" name=\"action\" value=\"Update Profile\" class=\"btn btn-link\">Update Profile</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </li>\r\n");
      out.write("                \r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <form action=\"LogoutServlet\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-danger\" style=\"margin-right:12px;\">Logout</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Passbook</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background-image: url('Bank.webp');\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	background-position: center;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	font-family: Arial, sans-serif;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar {\r\n");
      out.write("	background-color: rgba(0, 0, 0, 0.5);\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-brand {\r\n");
      out.write("	color: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-nav .nav-link {\r\n");
      out.write("	color: #f8f9fa !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-nav .nav-link:hover {\r\n");
      out.write("	color: #e9ecef !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-logout {\r\n");
      out.write("	background-color: #dc3545;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-logout:hover {\r\n");
      out.write("	background-color: #c82333;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".welcome-message {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	color: white;\r\n");
      out.write("	height: 70vh;\r\n");
      out.write("	justify-content: flex-start;\r\n");
      out.write("	padding-left: 20px;\r\n");
      out.write("	font-size: 45px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar .btn-link {\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar .btn-link:hover {\r\n");
      out.write("	color: #ffc107;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-profile {\r\n");
      out.write("	background-color: rgba(255, 255, 255, 0.93);\r\n");
      out.write("	color: #000;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-profile img {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("	object-fit: cover;\r\n");
      out.write("	margin-right: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-profile .card-body {\r\n");
      out.write("	flex: 1;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container mt-5\">\r\n");
      out.write("		<div class=\"card shadow-sm\">\r\n");
      out.write("			<div class=\"card-header bg-dark text-white\">\r\n");
      out.write("				<h2 class=\"mb-0\">Your Passbook</h2>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"card-body\">\r\n");
      out.write("				<!-- Account Selection Form -->\r\n");
      out.write("				<form action=\"CustomerController\" method=\"get\">\r\n");
      out.write("					<div class=\"form-group mb-3\">\r\n");
      out.write("						<label for=\"accountNumber\">Select Account:</label> <select\r\n");
      out.write("							class=\"form-control\" id=\"accountNumber\" name=\"accountNumber\">\r\n");
      out.write("							");

								List<String> accountNumbers = (List<String>) session.getAttribute("accountNumbers");
								for (String accountNumber : accountNumbers) {
							
      out.write("\r\n");
      out.write("							<option value=\"");
      out.print(accountNumber);
      out.write('"');
      out.write('>');
      out.print(accountNumber);
      out.write("</option>\r\n");
      out.write("							");

								}
							
      out.write("\r\n");
      out.write("						</select>\r\n");
      out.write("					</div>\r\n");
      out.write("					<button type=\"submit\" name=\"action\" value=\"PrintPassbook\"\r\n");
      out.write("						class=\"btn btn-primary mt-3\">View Passbook</button>\r\n");
      out.write("				</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				");

					List<Transactions> transactions = (List<Transactions>) request.getAttribute("transactions");
					if (transactions != null && !transactions.isEmpty()) {
				
      out.write("\r\n");
      out.write("				<table class=\"table table-bordered mt-4\">\r\n");
      out.write("					<thead class=\"thead-dark\">\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>Transaction ID</th>\r\n");
      out.write("							<th>Sender Account</th>\r\n");
      out.write("							<th>Receiver Account</th>\r\n");
      out.write("							<th>Transaction Type</th>\r\n");
      out.write("							<th>Amount</th>\r\n");
      out.write("							<th>Date</th>\r\n");
      out.write("							<th>Balance</th>\r\n");
      out.write("							\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("						");

							for (Transactions transaction : transactions) {
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.print(transaction.getTransactionID());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(transaction.getSenderAccountNumber());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(transaction.getRecieverAccountNumber());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(transaction.getTransaction_type());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(transaction.getAmount());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(transaction.getDate());
      out.write("</td>\r\n");
      out.write("							<td>");
      out.print(transaction.getBalance());
      out.write("</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

							}
						
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("				");

					} else {
				
      out.write("\r\n");
      out.write("				<p>No transactions found for the selected account.</p>\r\n");
      out.write("				");

					}
				
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
